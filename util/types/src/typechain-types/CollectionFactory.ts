/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface CollectionFactoryInterface extends utils.Interface {
  functions: {
    "addImplementationAddress(bytes32,address,bool)": FunctionFragment;
    "collections(address)": FunctionFragment;
    "createCollection(address,bytes)": FunctionFragment;
    "createEcosystemSettings(string,bytes)": FunctionFragment;
    "ecosystemSettings(bytes32,uint256)": FunctionFragment;
    "ecosystems(uint256)": FunctionFragment;
    "factoryMaintainerAddress()": FunctionFragment;
    "getCollections(address)": FunctionFragment;
    "getEcosystemSettings(bytes32,uint64)": FunctionFragment;
    "getEcosystems()": FunctionFragment;
    "getImplementationAddresses(bytes32,uint256,uint256)": FunctionFragment;
    "implementationAddresses(bytes32,uint256)": FunctionFragment;
    "owner()": FunctionFragment;
    "removeCollection(address,address,uint256)": FunctionFragment;
    "removeImplementationAddresses(bytes32[],address[],uint256[])": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setFactoryMaintainerAddress(address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "updateEcosystemSettings(bytes32,bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addImplementationAddress",
    values: [BytesLike, string, boolean]
  ): string;
  encodeFunctionData(functionFragment: "collections", values: [string]): string;
  encodeFunctionData(
    functionFragment: "createCollection",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "createEcosystemSettings",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "ecosystemSettings",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ecosystems",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "factoryMaintainerAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCollections",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getEcosystemSettings",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getEcosystems",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getImplementationAddresses",
    values: [BytesLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "implementationAddresses",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "removeCollection",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "removeImplementationAddresses",
    values: [BytesLike[], string[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setFactoryMaintainerAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateEcosystemSettings",
    values: [BytesLike, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "addImplementationAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collections",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createCollection",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createEcosystemSettings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ecosystemSettings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ecosystems", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "factoryMaintainerAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollections",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEcosystemSettings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEcosystems",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getImplementationAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "implementationAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeCollection",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeImplementationAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFactoryMaintainerAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateEcosystemSettings",
    data: BytesLike
  ): Result;

  events: {
    "CollectionAddressRemoved(address,address)": EventFragment;
    "CollectionCreated(address,address,address)": EventFragment;
    "EcosystemSettingsCreated(string,bytes32,bytes)": EventFragment;
    "EcosystemSettingsUpdated(bytes32,bytes)": EventFragment;
    "FactoryMaintainerAddressSet(address)": EventFragment;
    "ImplementationAddressAdded(address,bool)": EventFragment;
    "ImplementationAddressesRemoved(address[])": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CollectionAddressRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CollectionCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EcosystemSettingsCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EcosystemSettingsUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "FactoryMaintainerAddressSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ImplementationAddressAdded"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ImplementationAddressesRemoved"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export type CollectionAddressRemovedEvent = TypedEvent<
  [string, string],
  { implementationAddress: string; collectionAddress: string }
>;

export type CollectionAddressRemovedEventFilter =
  TypedEventFilter<CollectionAddressRemovedEvent>;

export type CollectionCreatedEvent = TypedEvent<
  [string, string, string],
  { implementationAddress: string; collectionAddress: string; creator: string }
>;

export type CollectionCreatedEventFilter =
  TypedEventFilter<CollectionCreatedEvent>;

export type EcosystemSettingsCreatedEvent = TypedEvent<
  [string, string, string],
  { ecosystemName: string; hashedEcosystemName: string; settings: string }
>;

export type EcosystemSettingsCreatedEventFilter =
  TypedEventFilter<EcosystemSettingsCreatedEvent>;

export type EcosystemSettingsUpdatedEvent = TypedEvent<
  [string, string],
  { hashedEcosystemName: string; settings: string }
>;

export type EcosystemSettingsUpdatedEventFilter =
  TypedEventFilter<EcosystemSettingsUpdatedEvent>;

export type FactoryMaintainerAddressSetEvent = TypedEvent<
  [string],
  { factoryMaintainerAddress: string }
>;

export type FactoryMaintainerAddressSetEventFilter =
  TypedEventFilter<FactoryMaintainerAddressSetEvent>;

export type ImplementationAddressAddedEvent = TypedEvent<
  [string, boolean],
  { implementationAddress: string; cloneable: boolean }
>;

export type ImplementationAddressAddedEventFilter =
  TypedEventFilter<ImplementationAddressAddedEvent>;

export type ImplementationAddressesRemovedEvent = TypedEvent<
  [string[]],
  { implementationAddresses: string[] }
>;

export type ImplementationAddressesRemovedEventFilter =
  TypedEventFilter<ImplementationAddressesRemovedEvent>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface CollectionFactory extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CollectionFactoryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addImplementationAddress(
      _hashedEcosystemName: BytesLike,
      _implementationAddress: string,
      _cloneable: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    collections(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[boolean, boolean] & { exists: boolean; cloneable: boolean }>;

    createCollection(
      _implementationAddress: string,
      _initializationData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createEcosystemSettings(
      _ecosystemName: string,
      _settings: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    ecosystemSettings(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string] & { id: BigNumber; settings: string }>;

    ecosystems(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    factoryMaintainerAddress(overrides?: CallOverrides): Promise<[string]>;

    "getCollections(address)"(
      _implementationAddress: string,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "getCollections(address,uint256,uint256)"(
      _implementationAddress: string,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getEcosystemSettings(
      _hashedEcosystemName: BytesLike,
      _blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getEcosystems()"(overrides?: CallOverrides): Promise<[string[]]>;

    "getEcosystems(uint256,uint256)"(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "getImplementationAddresses(bytes32,uint256,uint256)"(
      _hashedEcosystemName: BytesLike,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "getImplementationAddresses(bytes32)"(
      _hashedEcosystemName: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    implementationAddresses(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    removeCollection(
      _implementationAddress: string,
      _collectionAddress: string,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeImplementationAddresses(
      _hashedEcosystemNames: BytesLike[],
      _implementationAddressesToRemove: string[],
      _indexes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFactoryMaintainerAddress(
      _factoryMaintainerAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateEcosystemSettings(
      _hashedEcosystemName: BytesLike,
      _settings: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addImplementationAddress(
    _hashedEcosystemName: BytesLike,
    _implementationAddress: string,
    _cloneable: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  collections(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<[boolean, boolean] & { exists: boolean; cloneable: boolean }>;

  createCollection(
    _implementationAddress: string,
    _initializationData: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createEcosystemSettings(
    _ecosystemName: string,
    _settings: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  ecosystemSettings(
    arg0: BytesLike,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, string] & { id: BigNumber; settings: string }>;

  ecosystems(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  factoryMaintainerAddress(overrides?: CallOverrides): Promise<string>;

  "getCollections(address)"(
    _implementationAddress: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getCollections(address,uint256,uint256)"(
    _implementationAddress: string,
    _start: BigNumberish,
    _end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getEcosystemSettings(
    _hashedEcosystemName: BytesLike,
    _blockNumber: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getEcosystems()"(overrides?: CallOverrides): Promise<string[]>;

  "getEcosystems(uint256,uint256)"(
    _start: BigNumberish,
    _end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getImplementationAddresses(bytes32,uint256,uint256)"(
    _hashedEcosystemName: BytesLike,
    _start: BigNumberish,
    _end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getImplementationAddresses(bytes32)"(
    _hashedEcosystemName: BytesLike,
    overrides?: CallOverrides
  ): Promise<string[]>;

  implementationAddresses(
    arg0: BytesLike,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  removeCollection(
    _implementationAddress: string,
    _collectionAddress: string,
    _index: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeImplementationAddresses(
    _hashedEcosystemNames: BytesLike[],
    _implementationAddressesToRemove: string[],
    _indexes: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFactoryMaintainerAddress(
    _factoryMaintainerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateEcosystemSettings(
    _hashedEcosystemName: BytesLike,
    _settings: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addImplementationAddress(
      _hashedEcosystemName: BytesLike,
      _implementationAddress: string,
      _cloneable: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    collections(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[boolean, boolean] & { exists: boolean; cloneable: boolean }>;

    createCollection(
      _implementationAddress: string,
      _initializationData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    createEcosystemSettings(
      _ecosystemName: string,
      _settings: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    ecosystemSettings(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string] & { id: BigNumber; settings: string }>;

    ecosystems(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    factoryMaintainerAddress(overrides?: CallOverrides): Promise<string>;

    "getCollections(address)"(
      _implementationAddress: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getCollections(address,uint256,uint256)"(
      _implementationAddress: string,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getEcosystemSettings(
      _hashedEcosystemName: BytesLike,
      _blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getEcosystems()"(overrides?: CallOverrides): Promise<string[]>;

    "getEcosystems(uint256,uint256)"(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getImplementationAddresses(bytes32,uint256,uint256)"(
      _hashedEcosystemName: BytesLike,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getImplementationAddresses(bytes32)"(
      _hashedEcosystemName: BytesLike,
      overrides?: CallOverrides
    ): Promise<string[]>;

    implementationAddresses(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    removeCollection(
      _implementationAddress: string,
      _collectionAddress: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    removeImplementationAddresses(
      _hashedEcosystemNames: BytesLike[],
      _implementationAddressesToRemove: string[],
      _indexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setFactoryMaintainerAddress(
      _factoryMaintainerAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateEcosystemSettings(
      _hashedEcosystemName: BytesLike,
      _settings: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "CollectionAddressRemoved(address,address)"(
      implementationAddress?: string | null,
      collectionAddress?: string | null
    ): CollectionAddressRemovedEventFilter;
    CollectionAddressRemoved(
      implementationAddress?: string | null,
      collectionAddress?: string | null
    ): CollectionAddressRemovedEventFilter;

    "CollectionCreated(address,address,address)"(
      implementationAddress?: string | null,
      collectionAddress?: string | null,
      creator?: string | null
    ): CollectionCreatedEventFilter;
    CollectionCreated(
      implementationAddress?: string | null,
      collectionAddress?: string | null,
      creator?: string | null
    ): CollectionCreatedEventFilter;

    "EcosystemSettingsCreated(string,bytes32,bytes)"(
      ecosystemName?: null,
      hashedEcosystemName?: BytesLike | null,
      settings?: null
    ): EcosystemSettingsCreatedEventFilter;
    EcosystemSettingsCreated(
      ecosystemName?: null,
      hashedEcosystemName?: BytesLike | null,
      settings?: null
    ): EcosystemSettingsCreatedEventFilter;

    "EcosystemSettingsUpdated(bytes32,bytes)"(
      hashedEcosystemName?: BytesLike | null,
      settings?: null
    ): EcosystemSettingsUpdatedEventFilter;
    EcosystemSettingsUpdated(
      hashedEcosystemName?: BytesLike | null,
      settings?: null
    ): EcosystemSettingsUpdatedEventFilter;

    "FactoryMaintainerAddressSet(address)"(
      factoryMaintainerAddress?: string | null
    ): FactoryMaintainerAddressSetEventFilter;
    FactoryMaintainerAddressSet(
      factoryMaintainerAddress?: string | null
    ): FactoryMaintainerAddressSetEventFilter;

    "ImplementationAddressAdded(address,bool)"(
      implementationAddress?: string | null,
      cloneable?: boolean | null
    ): ImplementationAddressAddedEventFilter;
    ImplementationAddressAdded(
      implementationAddress?: string | null,
      cloneable?: boolean | null
    ): ImplementationAddressAddedEventFilter;

    "ImplementationAddressesRemoved(address[])"(
      implementationAddresses?: null
    ): ImplementationAddressesRemovedEventFilter;
    ImplementationAddressesRemoved(
      implementationAddresses?: null
    ): ImplementationAddressesRemovedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
  };

  estimateGas: {
    addImplementationAddress(
      _hashedEcosystemName: BytesLike,
      _implementationAddress: string,
      _cloneable: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    collections(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    createCollection(
      _implementationAddress: string,
      _initializationData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createEcosystemSettings(
      _ecosystemName: string,
      _settings: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    ecosystemSettings(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ecosystems(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    factoryMaintainerAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "getCollections(address)"(
      _implementationAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCollections(address,uint256,uint256)"(
      _implementationAddress: string,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEcosystemSettings(
      _hashedEcosystemName: BytesLike,
      _blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getEcosystems()"(overrides?: CallOverrides): Promise<BigNumber>;

    "getEcosystems(uint256,uint256)"(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getImplementationAddresses(bytes32,uint256,uint256)"(
      _hashedEcosystemName: BytesLike,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getImplementationAddresses(bytes32)"(
      _hashedEcosystemName: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    implementationAddresses(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    removeCollection(
      _implementationAddress: string,
      _collectionAddress: string,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeImplementationAddresses(
      _hashedEcosystemNames: BytesLike[],
      _implementationAddressesToRemove: string[],
      _indexes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFactoryMaintainerAddress(
      _factoryMaintainerAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateEcosystemSettings(
      _hashedEcosystemName: BytesLike,
      _settings: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addImplementationAddress(
      _hashedEcosystemName: BytesLike,
      _implementationAddress: string,
      _cloneable: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    collections(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createCollection(
      _implementationAddress: string,
      _initializationData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createEcosystemSettings(
      _ecosystemName: string,
      _settings: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    ecosystemSettings(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ecosystems(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    factoryMaintainerAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCollections(address)"(
      _implementationAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCollections(address,uint256,uint256)"(
      _implementationAddress: string,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEcosystemSettings(
      _hashedEcosystemName: BytesLike,
      _blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEcosystems()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getEcosystems(uint256,uint256)"(
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getImplementationAddresses(bytes32,uint256,uint256)"(
      _hashedEcosystemName: BytesLike,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getImplementationAddresses(bytes32)"(
      _hashedEcosystemName: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    implementationAddresses(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeCollection(
      _implementationAddress: string,
      _collectionAddress: string,
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeImplementationAddresses(
      _hashedEcosystemNames: BytesLike[],
      _implementationAddressesToRemove: string[],
      _indexes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFactoryMaintainerAddress(
      _factoryMaintainerAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateEcosystemSettings(
      _hashedEcosystemName: BytesLike,
      _settings: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
