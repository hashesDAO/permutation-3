/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MedleyLimitedEditionPredicates,
  MedleyLimitedEditionPredicatesInterface,
} from "../MedleyLimitedEditionPredicates";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IHashes",
        name: "_hashes",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_preSeasonMintFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_normalSeasonMintFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "currentRolloutState",
    outputs: [
      {
        internalType: "enum MedleyLimitedEditionPredicates.RolloutState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getTokenMintFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_hashesTokenId",
        type: "uint256",
      },
    ],
    name: "isTokenEligibleToMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "normalSeasonAllowlist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "preSeasonAllowlist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum MedleyLimitedEditionPredicates.RolloutState",
        name: "_rolloutState",
        type: "uint8",
      },
    ],
    name: "setCurrentRolloutState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_allowlist",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "_enable",
        type: "bool[]",
      },
    ],
    name: "setNormalSeasonAllowlist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_allowlist",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "_enable",
        type: "bool[]",
      },
    ],
    name: "setPreSeasonAllowlist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200127d3803806200127d833981016040819052620000349162000163565b6200003f3362000079565b600180546001600160a01b0319166001600160a01b038616179055600482905560058190556200006f83620000c9565b505050506200029f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620000ff5760405162461bcd60e51b8152600401620000f6906200021c565b60405180910390fd5b6001600160a01b038116620001285760405162461bcd60e51b8152600401620000f690620001d1565b620001338162000079565b50565b8051620001438162000276565b92915050565b805162000143816200028d565b8051620001438162000298565b600080600080608085870312156200017e576200017e600080fd5b60006200018c878762000149565b94505060206200019f8782880162000136565b9350506040620001b28782880162000156565b9250506060620001c58782880162000156565b91505092959194509250565b602080825281016200014381602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201526564647265737360d01b604082015260600190565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408301526060820162000143565b60006001600160a01b03821662000143565b6000620001438262000257565b620002818162000257565b81146200013357600080fd5b620002818162000269565b8062000281565b610fce80620002af6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063715018a6116100815780639d54e78b1161005b5780639d54e78b146101c2578063cb2b4e09146101e5578063f2fde38b146101f857600080fd5b8063715018a6146101815780638da5cb5b146101895780639626f09c146101af57600080fd5b80631dbef47e116100b25780631dbef47e1461010c57806368001a861461013e5780636db54a451461015157600080fd5b806303208980146100ce5780631cc1fddb146100e3575b600080fd5b6100e16100dc366004610b2f565b61020b565b005b6100f66100f1366004610c04565b610321565b6040516101039190610d98565b60405180910390f35b6000546101319074010000000000000000000000000000000000000000900460ff1681565b6040516101039190610d30565b6100e161014c366004610bc2565b610340565b61017461015f366004610be3565b60036020526000908152604090205460ff1681565b6040516101039190610d22565b6100e16103ea565b60005473ffffffffffffffffffffffffffffffffffffffff166040516101039190610d14565b6101746101bd366004610c04565b610447565b6101746101d0366004610be3565b60026020526000908152604090205460ff1681565b6100e16101f3366004610b2f565b610799565b6100e1610206366004610b0e565b6108a1565b60005473ffffffffffffffffffffffffffffffffffffffff163314610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610d4e565b60405180910390fd5b80518251146102a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610d88565b60005b825181101561031c578181815181106102be576102be610efb565b6020026020010151600360008584815181106102dc576102dc610efb565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061031490610e64565b9150506102a3565b505050565b6000600f831015610335575060045461033a565b506005545b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610391576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610d4e565b600080548291907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000008360068111156103e2576103e2610ecc565b021790555050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610d4e565b610445600061094b565b565b60008060005474010000000000000000000000000000000000000000900460ff16600681111561047957610479610ecc565b14156104875750600061033a565b600160005474010000000000000000000000000000000000000000900460ff1660068111156104b8576104b8610ecc565b14156104e357600f831080156104dc575060008281526002602052604090205460ff165b905061033a565b600260005474010000000000000000000000000000000000000000900460ff16600681111561051457610514610ecc565b14156105f757600f831080156104dc57506103e8821080156105d957506001546040517fa899b36c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a899b36c90610587908590600401610d98565b60206040518083038186803b15801561059f57600080fd5b505afa1580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d79190610ba1565b155b806104dc57505060008181526002602052604090205460ff1661033a565b600360005474010000000000000000000000000000000000000000900460ff16600681111561062857610628610ecc565b14156106385750600f821061033a565b600460005474010000000000000000000000000000000000000000900460ff16600681111561066957610669610ecc565b1415610687575060008181526003602052604090205460ff1661033a565b600560005474010000000000000000000000000000000000000000900460ff1660068111156106b8576106b8610ecc565b1415610790576103e88210801561077257506001546040517fa899b36c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a899b36c90610720908590600401610d98565b60206040518083038186803b15801561073857600080fd5b505afa15801561074c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107709190610ba1565b155b806104dc57505060008181526003602052604090205460ff1661033a565b50600192915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610d4e565b8051825114610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610d88565b60005b825181101561031c5781818151811061084357610843610efb565b60200260200101516002600085848151811061086157610861610efb565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061089990610e64565b915050610828565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610d4e565b73ffffffffffffffffffffffffffffffffffffffff811661093f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610d3e565b6109488161094b565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006109d36109ce84610dc2565b610da6565b905080838252602082019050828560208602820111156109f5576109f5600080fd5b60005b85811015610a215781610a0b8882610ae2565b84525060209283019291909101906001016109f8565b5050509392505050565b6000610a396109ce84610dc2565b90508083825260208201905082856020860282011115610a5b57610a5b600080fd5b60005b85811015610a215781610a718882610b03565b8452506020928301929190910190600101610a5e565b803561033a81610f69565b600082601f830112610aa657610aa6600080fd5b8135610ab68482602086016109c0565b949350505050565b600082601f830112610ad257610ad2600080fd5b8135610ab6848260208601610a2b565b803561033a81610f7d565b805161033a81610f7d565b803561033a81610f85565b803561033a81610f92565b600060208284031215610b2357610b23600080fd5b6000610ab68484610a87565b60008060408385031215610b4557610b45600080fd5b823567ffffffffffffffff811115610b5f57610b5f600080fd5b610b6b85828601610abe565b925050602083013567ffffffffffffffff811115610b8b57610b8b600080fd5b610b9785828601610a92565b9150509250929050565b600060208284031215610bb657610bb6600080fd5b6000610ab68484610aed565b600060208284031215610bd757610bd7600080fd5b6000610ab68484610af8565b600060208284031215610bf857610bf8600080fd5b6000610ab68484610b03565b60008060408385031215610c1a57610c1a600080fd5b6000610c268585610b03565b9250506020610b9785828601610b03565b610c4081610de6565b82525050565b801515610c40565b610c4081610e0e565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015291505b5060400190565b603a81526000602082017f4d65646c65794c696d6974656445646974696f6e507265646963617465733a2081527f617272617973206d7573742062652073616d65206c656e67746800000000000060208201529150610cad565b80610c40565b6020810161033a8284610c37565b6020810161033a8284610c46565b6020810161033a8284610c4e565b6020808252810161033a81610c57565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408301526060820161033a565b6020808252810161033a81610cb4565b6020810161033a8284610d0e565b6000610db160405190565b9050610dbd8282610e19565b919050565b600067ffffffffffffffff821115610ddc57610ddc610f2a565b5060209081020190565b600073ffffffffffffffffffffffffffffffffffffffff821661033a565b80610dbd81610f59565b600061033a82610e04565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715610e5d57610e5d610f2a565b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e9657610e96610e9d565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6007811061094857610948610ecc565b610f7281610de6565b811461094857600080fd5b801515610f72565b6007811061094857600080fd5b80610f7256fea2646970667358221220ea327a67994b6f18f4d16d63ea86f6be2b395c2c17e90bad50c9321ace172cb064736f6c63430008060033";

type MedleyLimitedEditionPredicatesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MedleyLimitedEditionPredicatesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MedleyLimitedEditionPredicates__factory extends ContractFactory {
  constructor(...args: MedleyLimitedEditionPredicatesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _hashes: string,
    _owner: string,
    _preSeasonMintFee: BigNumberish,
    _normalSeasonMintFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MedleyLimitedEditionPredicates> {
    return super.deploy(
      _hashes,
      _owner,
      _preSeasonMintFee,
      _normalSeasonMintFee,
      overrides || {}
    ) as Promise<MedleyLimitedEditionPredicates>;
  }
  getDeployTransaction(
    _hashes: string,
    _owner: string,
    _preSeasonMintFee: BigNumberish,
    _normalSeasonMintFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hashes,
      _owner,
      _preSeasonMintFee,
      _normalSeasonMintFee,
      overrides || {}
    );
  }
  attach(address: string): MedleyLimitedEditionPredicates {
    return super.attach(address) as MedleyLimitedEditionPredicates;
  }
  connect(signer: Signer): MedleyLimitedEditionPredicates__factory {
    return super.connect(signer) as MedleyLimitedEditionPredicates__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MedleyLimitedEditionPredicatesInterface {
    return new utils.Interface(_abi) as MedleyLimitedEditionPredicatesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MedleyLimitedEditionPredicates {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MedleyLimitedEditionPredicates;
  }
}
