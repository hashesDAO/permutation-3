/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IHashesDAO, IHashesDAOInterface } from "../IHashesDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_proposalId",
        type: "uint128",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_proposalId",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "_support",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_deactivate",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_deactivateSignature",
        type: "bytes",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_proposalId",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "_support",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_deactivate",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_deactivateSignature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "castVoteBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_signatures",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_authorities",
        type: "address[]",
      },
    ],
    name: "deactivateAuthorities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_proposalId",
        type: "uint128",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_proposalId",
        type: "uint128",
      },
    ],
    name: "getActions",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    name: "getAuthorityStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_txHash",
        type: "bytes32",
      },
    ],
    name: "getIsQueuedTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "getLatestProposalId",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_proposalId",
        type: "uint128",
      },
    ],
    name: "getProposal",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalCount",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_proposalId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "getReceipt",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "support",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct IHashesDAO.Receipt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "_signatures",
        type: "string[]",
      },
      {
        internalType: "bytes[]",
        name: "_calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_proposalId",
        type: "uint128",
      },
    ],
    name: "queue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_proposalId",
        type: "uint128",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IHashesDAO.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_proposalId",
        type: "uint128",
      },
      {
        internalType: "bytes[]",
        name: "_signatures",
        type: "bytes[]",
      },
    ],
    name: "veto",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IHashesDAO__factory {
  static readonly abi = _abi;
  static createInterface(): IHashesDAOInterface {
    return new utils.Interface(_abi) as IHashesDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IHashesDAO {
    return new Contract(address, _abi, signerOrProvider) as IHashesDAO;
  }
}
