/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RoyaltyRegistry,
  RoyaltyRegistryInterface,
} from "../RoyaltyRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "royaltyAddress",
        type: "address",
      },
    ],
    name: "RoyaltyOverride",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getRoyaltyLookupAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "overrideAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "royaltyLookupAddress",
        type: "address",
      },
    ],
    name: "setRoyaltyLookupAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506113f1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638129fc1c1161005b5780638129fc1c146100e65780638da5cb5b146100ee578063de5488af14610115578063f2fde38b1461012857600080fd5b806301ffc9a71461008d57806326bd8982146100b657806370e06281146100cb578063715018a6146100de575b600080fd5b6100a061009b366004611079565b61013b565b6040516100ad919061129a565b60405180910390f35b6100c96100c436600461101b565b6101d4565b005b6100a06100d9366004610fd1565b61033e565b6100c9610ae6565b6100c9610b43565b60335473ffffffffffffffffffffffffffffffffffffffff165b6040516100ad9190611264565b610108610123366004610fd1565b610c0b565b6100c9610136366004610fd1565b610c48565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f880963ac0000000000000000000000000000000000000000000000000000000014806101ce57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b73ffffffffffffffffffffffffffffffffffffffff82163b1515801561022e575073ffffffffffffffffffffffffffffffffffffffff81163b15158061022e575073ffffffffffffffffffffffffffffffffffffffff8116155b61026d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026490611311565b60405180910390fd5b6102768261033e565b6102ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610264906112e1565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260656020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169183169190911790557f22fb05840ad0d4b2be640c56e11065f26b799d2918d8f81190416f62b154b9c633838360405161033293929190611272565b60405180910390a15050565b60335460009073ffffffffffffffffffffffffffffffffffffffff1633141561036957506001919050565b610393827f553e757e00000000000000000000000000000000000000000000000000000000610cef565b801561043c57506040517f24d7806c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906324d7806c906103ec903390600401611264565b60206040518083038186803b15801561040457600080fd5b505afa158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c9190611058565b1561044957506001919050565b8173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048f57600080fd5b505afa9250505080156104dd575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526104da91810190610ffa565b60015b6104e65761050f565b73ffffffffffffffffffffffffffffffffffffffff811633141561050d5750600192915050565b505b6040517f91d1485400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906391d14854906105649060009033906004016112b6565b60206040518083038186803b15801561057c57600080fd5b505afa9250505080156105ca575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526105c791810190611058565b60015b6105d3576105e4565b80156105e25750600192915050565b505b8173ffffffffffffffffffffffffffffffffffffffff1663be772d4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062a57600080fd5b505afa925050508015610678575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261067591810190610ffa565b60015b6106815761074b565b6040517fe37ce6fa00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063e37ce6fa906106d3903390600401611264565b60206040518083038186803b1580156106eb57600080fd5b505afa925050508015610739575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261073691810190611058565b60015b61074257610749565b9392505050565b505b8173ffffffffffffffffffffffffffffffffffffffff1663f7a2da236040518163ffffffff1660e01b815260040160206040518083038186803b15801561079157600080fd5b505afa9250505080156107df575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526107dc91810190610ffa565b60015b6107e8576108a6565b6040517f24d7806c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216906324d7806c9061083a903390600401611264565b60206040518083038186803b15801561085257600080fd5b505afa9250505080156108a0575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261089d91810190611058565b60015b61074257505b8173ffffffffffffffffffffffffffffffffffffffff1663748365ef6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108ec57600080fd5b505afa92505050801561093a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261093791810190610ffa565b60015b61094357610a18565b6040517fc395fcb300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063c395fcb390610995903390600401611264565b60206040518083038186803b1580156109ad57600080fd5b505afa9250505080156109fb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526109f891810190611058565b60015b610a0457610a16565b8015610a14575060019392505050565b505b505b8173ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b158015610a5e57600080fd5b505afa925050508015610aac575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610aa991810190610ffa565b60015b610ab557610ade565b73ffffffffffffffffffffffffffffffffffffffff8116331415610adc5750600192915050565b505b506000919050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610b37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026490611301565b610b416000610d0b565b565b600054610100900460ff1680610b5c575060005460ff16155b610b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610264906112f1565b600054610100900460ff16158015610bd157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b610bd9610d82565b8015610c0857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152606560205260408120549091168015610c415792915050565b5090919050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610c99576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026490611301565b73ffffffffffffffffffffffffffffffffffffffff8116610ce6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610264906112d1565b610c0881610d0b565b6000610cfa83610e19565b801561074257506107428383610e7d565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610d9b575060005460ff16155b610dd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610264906112f1565b600054610100900460ff16158015610e1057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b610bd933610d0b565b6000610e45827f01ffc9a700000000000000000000000000000000000000000000000000000000610e7d565b80156101ce5750610e76827fffffffff00000000000000000000000000000000000000000000000000000000610e7d565b1592915050565b6000806301ffc9a760e01b83604051602401610e9991906112a8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000808573ffffffffffffffffffffffffffffffffffffffff1661753084604051610f239190611258565b6000604051808303818686fa925050503d8060008114610f5f576040519150601f19603f3d011682016040523d82523d6000602084013e610f64565b606091505b5091509150602081511015610f7f57600093505050506101ce565b818015610f9b575080806020019051810190610f9b9190611058565b9695505050505050565b80356101ce81611377565b80516101ce81611377565b80516101ce8161138b565b80356101ce81611393565b600060208284031215610fe657610fe6600080fd5b6000610ff28484610fa5565b949350505050565b60006020828403121561100f5761100f600080fd5b6000610ff28484610fb0565b6000806040838503121561103157611031600080fd5b600061103d8585610fa5565b925050602061104e85828601610fa5565b9150509250929050565b60006020828403121561106d5761106d600080fd5b6000610ff28484610fbb565b60006020828403121561108e5761108e600080fd5b6000610ff28484610fc6565b6110a381611321565b82525050565b8015156110a3565b7fffffffff0000000000000000000000000000000000000000000000000000000081166110a3565b60006110e3825190565b6110f1818560208601611347565b9290920192915050565b6110a38161133f565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015291505b5060400190565b601181526000602082017f5065726d697373696f6e2064656e696564000000000000000000000000000000815291505b5060200190565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181527f647920696e697469616c697a65640000000000000000000000000000000000006020820152915061115a565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000611191565b600d81526000602082017f496e76616c696420696e7075740000000000000000000000000000000000000081529150611191565b600061074282846110d9565b602081016101ce828461109a565b60608101611280828661109a565b61128d602083018561109a565b610ff2604083018461109a565b602081016101ce82846110a9565b602081016101ce82846110b1565b604081016112c482856110fb565b610742602083018461109a565b602080825281016101ce81611104565b602080825281016101ce81611161565b602080825281016101ce81611198565b602080825281016101ce816111f2565b602080825281016101ce81611224565b600073ffffffffffffffffffffffffffffffffffffffff82166101ce565b6000816101ce565b60005b8381101561136257818101518382015260200161134a565b83811115611371576000848401525b50505050565b61138081611321565b8114610c0857600080fd5b801515611380565b7fffffffff00000000000000000000000000000000000000000000000000000000811661138056fea26469706673582212208e29f152c04982b40c2cf37f3d6499915a0444fa8993d433daa7f12ee651ba7164736f6c63430008060033";

type RoyaltyRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyRegistry__factory extends ContractFactory {
  constructor(...args: RoyaltyRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoyaltyRegistry> {
    return super.deploy(overrides || {}) as Promise<RoyaltyRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RoyaltyRegistry {
    return super.attach(address) as RoyaltyRegistry;
  }
  connect(signer: Signer): RoyaltyRegistry__factory {
    return super.connect(signer) as RoyaltyRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyRegistryInterface {
    return new utils.Interface(_abi) as RoyaltyRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltyRegistry {
    return new Contract(address, _abi, signerOrProvider) as RoyaltyRegistry;
  }
}
