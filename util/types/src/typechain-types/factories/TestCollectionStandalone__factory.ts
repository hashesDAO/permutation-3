/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestCollectionStandalone,
  TestCollectionStandaloneInterface,
} from "../TestCollectionStandalone";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_settings",
        type: "bytes",
      },
    ],
    name: "verifyEcosystemSettings",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610220806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806304eff22f14610030575b600080fd5b61004361003e3660046100c4565b511590565b604051901515815260200160405180910390f35b600061006a6100658461011b565b6100ff565b90508281526020810184848401111561008557610085600080fd5b610090848285610164565b509392505050565b600082601f8301126100ac576100ac600080fd5b81356100bc848260208601610057565b949350505050565b6000602082840312156100d9576100d9600080fd5b813567ffffffffffffffff8111156100f3576100f3600080fd5b6100bc84828501610098565b600061010a60405190565b90506101168282610170565b919050565b600067ffffffffffffffff821115610135576101356101bb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011660200192915050565b82818337506000910152565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff821117156101b4576101b46101bb565b6040525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220e25f778fc72de2e736aad64bfa50bbd6437f5b008dae9e272e0d579cd043912664736f6c63430008060033";

type TestCollectionStandaloneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestCollectionStandaloneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestCollectionStandalone__factory extends ContractFactory {
  constructor(...args: TestCollectionStandaloneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestCollectionStandalone> {
    return super.deploy(overrides || {}) as Promise<TestCollectionStandalone>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestCollectionStandalone {
    return super.attach(address) as TestCollectionStandalone;
  }
  connect(signer: Signer): TestCollectionStandalone__factory {
    return super.connect(signer) as TestCollectionStandalone__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCollectionStandaloneInterface {
    return new utils.Interface(_abi) as TestCollectionStandaloneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCollectionStandalone {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestCollectionStandalone;
  }
}
