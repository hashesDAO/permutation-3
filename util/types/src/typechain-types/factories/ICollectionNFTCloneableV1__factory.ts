/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ICollectionNFTCloneableV1,
  ICollectionNFTCloneableV1Interface,
} from "../ICollectionNFTCloneableV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "completeSignatureBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_hashesTokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_royaltyBps",
        type: "uint16",
      },
    ],
    name: "setRoyaltyBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signatureBlockAddress",
        type: "address",
      },
    ],
    name: "setSignatureBlockAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creatorAddress",
        type: "address",
      },
    ],
    name: "transferCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ICollectionNFTCloneableV1__factory {
  static readonly abi = _abi;
  static createInterface(): ICollectionNFTCloneableV1Interface {
    return new utils.Interface(_abi) as ICollectionNFTCloneableV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICollectionNFTCloneableV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ICollectionNFTCloneableV1;
  }
}
